
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'org.jetbrains.dokka'

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    if (project.plugins.findPlugin("com.android.library")) {

        // For Android libraries
        from android.sourceSets.main.java.srcDirs
        from android.sourceSets.main.kotlin.srcDirs
    } else {
        from sourceSets.main.java.srcDirs
        from sourceSets.main.kotlin.srcDirs
    }


}
task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    archiveClassifier.set('javadoc')
    from dokkaJavadoc.outputDirectory
}

artifacts {
    archives androidSourcesJar
    archives javadocJar
}


afterEvaluate {
    publishing {

        publications {
            release(MavenPublication) {
                groupId project.ext.group
                artifactId ARTIFACT_ID
                version PUBLISH_VERSION

                if (project.plugins.findPlugin("com.android.library")) {
                    from components.release
                } else {
                    from components.java
                }

                artifact androidSourcesJar
                artifact javadocJar

                // metadata
                pom {
                    name = ARTIFACT_ID
                    description = 'SDK'
                    url = project.ext.url
                    licenses {
                        license {
                            name = 'Konfigure License'
                            url = 'https://opensource.org/licenses/MIT'
                        }
                    }
                    developers {
                        developer {
                            id = 'sabinmj'
                            name = 'Sabin Mulakukodiyan'
                            email = 'sabin.mulakukodiyan@trademe.co.nz'
                        }
                        // Add all other devs here...
                    }

                    // Version control info - if you're using GitHub, follow the
                    // format as seen here
                    scm {
                        connection = project.ext.connection
                        developerConnection = project.ext.developerConnection
                        url = project.ext.url

                    }
                }
            }
        }
    }
}
signing {
    if (rootProject.ext["signing.keyId"] && rootProject.ext["signing.key"] && rootProject.ext["signing.password"]) {
        useInMemoryPgpKeys(
                rootProject.ext["signing.keyId"],
                rootProject.ext["signing.key"],
                rootProject.ext["signing.password"],
        )
        sign publishing.publications

    } else {
        sign configurations.archives
    }
}
java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}